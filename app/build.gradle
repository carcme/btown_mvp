buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId 'me.carc.btown'
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 71
        versionName "2.1.31"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        android.defaultConfig.vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        resConfigs "en", "de"
        multiDexEnabled true
        buildConfigField "String", "API_KEY", getPrivateKey("API_KEY")
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            useProguard false

            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            buildConfigField "String", "FABRIC_apiSecret", getPrivateKey("FABRIC_apiSecret")

            buildConfigField "String", "FIREBASE_ENDPOINT", getPrivateKey("FIREBASE_ENDPOINT")
            buildConfigField "String", "FIREBASE_ALT", getPrivateKey("FIREBASE_ALT")
            buildConfigField "String", "FIREBASE_TOKEN", getPrivateKey("FIREBASE_TOKEN")

            buildConfigField "String", "FOURSQ_ID", getPrivateKey("FOURSQUARECLIENTID")
            buildConfigField "String", "FOURSQ_SECRET", getPrivateKey("FOURSQUARECLIENTSECRET")
            buildConfigField "String", "FOURSQUARE_BTOWN_LISTS_ID", getPrivateKey("FOURSQUARE_BTOWN_LISTS_ID")

            buildConfigField "String", "GOOGLE_SERVER_KEY", getPrivateKey("GOOGLE_SERVER_KEY")
            buildConfigField "String", "GRAPHHOPPER_API_KEY", getPrivateKey("GRAPHHOPPER_API_KEY")

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources false
            zipAlignEnabled true
            useProguard true
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            buildConfigField "String", "FABRIC_apiSecret", getPrivateKey("FABRIC_apiSecret")

            buildConfigField "String", "FIREBASE_ENDPOINT", getPrivateKey("FIREBASE_ENDPOINT")
            buildConfigField "String", "FIREBASE_ALT", getPrivateKey("FIREBASE_ALT")
            buildConfigField "String", "FIREBASE_TOKEN", getPrivateKey("FIREBASE_TOKEN")

            buildConfigField "String", "FOURSQ_ID", getPrivateKey("FOURSQUARECLIENTID")
            buildConfigField "String", "FOURSQ_SECRET", getPrivateKey("FOURSQUARECLIENTSECRET")
            buildConfigField "String", "FOURSQUARE_BTOWN_LISTS_ID", getPrivateKey("FOURSQUARE_BTOWN_LISTS_ID")

            buildConfigField "String", "GOOGLE_SERVER_KEY", getPrivateKey("GOOGLE_SERVER_KEY")
            buildConfigField "String", "GRAPHHOPPER_API_KEY", getPrivateKey("GRAPHHOPPER_API_KEY")

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        jumboMode true
    }
}

def static getPrivateKey(String property) {
    Properties props = new Properties()
    props.load(new FileInputStream(new File('D:/carc.apps/btown_map/local.properties')))
    return props[property]
}

ext {
    supportLibVersion = '27.1.1'
    constraintLayoutVersion = '1.1.0'
    googlePlayServices = '15.0.1'
    butterknife = '8.4.0'
    osmdroid = '6.0.2'
    firebase = '16.0.1'
    firebaseUI = '4.0.0'
    facebook = '4.23.+'
    glide = '4.7.1'
//    glide = '3.7.0'
    retrofit = '2.4.0'
    okhttp = '3.8.0'
//    roomVersion = '1.1.0'
    roomVersion = '1.1.1' //''1.0.0-alpha7'
    gsonVersion = '2.8.2'
    lifecycleVersion = '1.1.1'
//    evernotejob = '1.2.0'
    DAGGER_VERSION = '2.5'

    RXJAVA = '2.1.8'
    RXANDROID = '2.0.1'
    RXLIFECYCLE = '2.2.1'
    RXPERMISSIONS = '0.9.5@aar'

    leakcanary = '1.6.1'
    robolectric = '3.5.1'
    mockito = '2.12.0'
}

dependencies {
    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:multidex:1.0.3'

    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"
//    implementation "com.android.support:support-v4:${supportLibVersion}"
    implementation "com.android.support:support-v13:${supportLibVersion}"
    implementation "com.android.support:customtabs:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    implementation "com.android.support:palette-v7:${supportLibVersion}"
    implementation "com.android.support:preference-v14:${supportLibVersion}"
    implementation "com.android.support:animated-vector-drawable:${supportLibVersion}"
    implementation "com.android.support:exifinterface:${supportLibVersion}"

    implementation "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"

    implementation "com.google.android.gms:play-services-auth:${googlePlayServices}"
    implementation "com.google.android.gms:play-services-location:${googlePlayServices}"

    // BUTTERKNIFE
    implementation "com.jakewharton:butterknife:$butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife"

    // FIREBASE
    implementation "com.google.firebase:firebase-core:$firebase"
    implementation "com.google.firebase:firebase-database:$firebase"
    implementation "com.firebaseui:firebase-ui-database:$firebaseUI"
    implementation "com.google.firebase:firebase-storage:$firebase"
    implementation "com.firebaseui:firebase-ui-storage:$firebaseUI"

    // FIREBASE - specific versions
    implementation 'com.google.firebase:firebase-auth:16.0.2'
    implementation 'com.google.firebase:firebase-config:16.0.0'

    // MAPBOX
//    implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:6.3.0'
//    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-building:0.3.0'

    // OSMDROID
//    implementation(name: 'osmdroid-android-6.0.2-SNAPSHOT', ext: 'aar')
    implementation "org.osmdroid:osmdroid-android:$osmdroid"

    // GLIDE
    implementation "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"
    
    // RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "com.google.code.gson:gson:$gsonVersion"

    // ROOM
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"
    //    androidTestImplementation "android.arch.persistence.room:testing:$roomVersion"

    // Lifecyles, LiveData and ViewModel - CONFLICT WITH ROOM
    implementation "android.arch.lifecycle:runtime:$lifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycleVersion"

    // DAGGER
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2
    annotationProcessor daggerCompiler
    testAnnotationProcessor daggerCompiler
    androidTestAnnotationProcessor daggerCompiler

    // ABOUT LIBS AND EXTRA ICONS
    implementation "com.mikepenz:iconics-core:3.0.4@aar"
    implementation "com.mikepenz:iconics-views:3.0.4@aar"
    implementation 'com.mikepenz:fontawesome-typeface:5.0.13.0@aar'
    implementation 'com.mikepenz:community-material-typeface:2.0.46.1@aar'
    implementation "com.mikepenz:aboutlibraries:6.1.1"
//    implementation 'com.mikepenz:fastadapter:2.6.3@aar'

    // MISC
    implementation 'carcme:login-buttons:0.3.0'
    implementation 'com.github.lzyzsd:circleprogress:1.2.1'
    implementation 'com.flaviofaria:kenburnsview:1.0.7'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.github.faruktoptas:FancyShowCaseView:1.0.1'
    implementation 'pub.devrel:easypermissions:1.2.0'

    // LEAK CANARY
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary"
    testImplementation "org.robolectric:robolectric:$robolectric"
    testImplementation "org.mockito:mockito-core:$mockito"
    testImplementation 'junit:junit:4.12'
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.0@aar') {
        transitive = true;
    }
/*
    implementation 'pl.charmas.android:android-reactive-location2:2.1@aar'
    implementation "io.reactivex.rxjava2:rxjava:$RXJAVA"
    implementation "io.reactivex.rxjava2:rxandroid:$RXANDROID"
    implementation "com.tbruyelle.rxpermissions2:rxpermissions:$RXPERMISSIONS"
*/

    compileOnly 'com.google.code.findbugs:annotations:3.0.1'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.1'

//    implementation 'com.klinkerapps:article_viewer:0.24.9'
}
apply plugin: 'com.google.gms.google-services'